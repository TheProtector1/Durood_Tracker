// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Profile information
  displayName String?
  avatar     String?
  
  // Durood entries
  duroodEntries DuroodEntry[]
  
  // Daily rankings
  dailyRankings DailyRanking[]
  
  @@map("users")
}

model DuroodEntry {
  id        String   @id @default(cuid())
  userId    String
  date      String   // Format: YYYY-MM-DD
  count     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("durood_entries")
}

model DailyRanking {
  id        String   @id @default(cuid())
  date      String   // Format: YYYY-MM-DD
  userId    String
  username  String   // Store username for faster queries
  displayName String?
  count     Int
  rank      Int
  createdAt DateTime @default(now())
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Composite unique constraint
  @@unique([date, userId])
  @@map("daily_rankings")
}

model PasswordReset {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expires   DateTime
  createdAt DateTime @default(now())
  
  @@map("password_resets")
}
